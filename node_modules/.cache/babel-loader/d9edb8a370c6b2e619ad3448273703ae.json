{"ast":null,"code":"var _jsxFileName = \"/home/alexandr/PycharmProjects/\\u0421\\u0442\\u0430\\u0436\\u0438\\u0440\\u043E\\u0432\\u043A\\u0430/frontend/src/Inventory.js\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport Item from \"./item\";\n\nclass Inventory extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      inventory: []\n    };\n    axios.get('http://localhost:8000/api/v1/inventory/', {\n      headers: {\n        Authorization: localStorage.getItem('trading_api_token')\n      }\n    }).then(response => this.setState({\n      inventory: response.data\n    })).catch(err => {\n      if (err.response) {\n        console.log(err.response.data);\n      }\n    });\n  }\n\n  render() {\n    let content = this.state.inventory.map(item => /*#__PURE__*/React.createElement(\"div\", {\n      key: item.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Item, {\n      item: item.item,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }\n    }, \"Quantity: \", item.quantity), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }\n    }, \"Reserved quantity: \", item.reserved_quantity)));\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }\n    }, content);\n  }\n\n}\n\nexport { Inventory };","map":{"version":3,"sources":["/home/alexandr/PycharmProjects/Стажировка/frontend/src/Inventory.js"],"names":["React","axios","Item","Inventory","Component","constructor","props","state","inventory","get","headers","Authorization","localStorage","getItem","then","response","setState","data","catch","err","console","log","render","content","map","item","id","quantity","reserved_quantity"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AAEA,MAAMC,SAAN,SAAwBH,KAAK,CAACI,SAA9B,CAAuC;AACnCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAY;AACRC,MAAAA,SAAS,EAAE;AADH,KAAZ;AAGAP,IAAAA,KAAK,CACAQ,GADL,CACS,yCADT,EACoD;AAC5CC,MAAAA,OAAO,EAAE;AACLC,QAAAA,aAAa,EAAEC,YAAY,CAACC,OAAb,CAAqB,mBAArB;AADV;AADmC,KADpD,EAMKC,IANL,CAMUC,QAAQ,IAAI,KAAKC,QAAL,CAAc;AAACR,MAAAA,SAAS,EAAEO,QAAQ,CAACE;AAArB,KAAd,CANtB,EAOKC,KAPL,CAOWC,GAAG,IAAI;AACV,UAAIA,GAAG,CAACJ,QAAR,EAAiB;AACbK,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACJ,QAAJ,CAAaE,IAAzB;AACH;AACJ,KAXL;AAYH;;AACDK,EAAAA,MAAM,GAAG;AACL,QAAIC,OAAO,GAAG,KAAKhB,KAAL,CAAWC,SAAX,CAAqBgB,GAArB,CAAyBC,IAAI,iBACvC;AAAK,MAAA,GAAG,EAAEA,IAAI,CAACC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAED,IAAI,CAACA,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAcA,IAAI,CAACE,QAAnB,CAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAAuBF,IAAI,CAACG,iBAA5B,CAHJ,CADU,CAAd;AAOA,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKL,OADL,CADJ;AAKH;;AAhCkC;;AAmCvC,SAAQpB,SAAR","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport Item from \"./item\";\n\nclass Inventory extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state ={\n            inventory: []\n        }\n        axios\n            .get('http://localhost:8000/api/v1/inventory/', {\n                headers: {\n                    Authorization: localStorage.getItem('trading_api_token')\n                }\n            })\n            .then(response => this.setState({inventory: response.data}))\n            .catch(err => {\n                if (err.response){\n                    console.log(err.response.data)\n                }\n            })\n    }\n    render() {\n        let content = this.state.inventory.map(item =>\n            <div key={item.id}>\n                <Item item={item.item} />\n                <p>Quantity: {item.quantity}</p>\n                <p>Reserved quantity: {item.reserved_quantity}</p>\n            </div>\n        )\n        return (\n            <div>\n                {content}\n            </div>\n        )\n    }\n}\n\nexport {Inventory}"]},"metadata":{},"sourceType":"module"}