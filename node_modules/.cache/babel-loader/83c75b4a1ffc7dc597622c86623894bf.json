{"ast":null,"code":"async function get_request(url) {\n  let response = await fetch(url, {\n    method: 'GET',\n    headers: {\n      Authorization: localStorage.getItem('token') ? `jwt ${localStorage.getItem('token')}` : '',\n      'Content-Type': 'application/json;charset=utf-8'\n    }\n  }).catch(() => alert(`Код ошибки ${response.status}`));\n  alert(response.status);\n  return await response.json();\n}\n\nasync function post_request(url, data = {}) {\n  let response = await fetch(url, {\n    method: 'POST',\n    headers: {\n      Authorization: localStorage.getItem('token') ? `jwt ${localStorage.getItem('token')}` : '',\n      'Content-Type': 'application/json;charset=utf-8'\n    },\n    body: JSON.stringify(data)\n  }).catch(() => alert(`Код ошибки ${response.status}`));\n  return response.status;\n} // async function put_request(url, data={}) {\n//     let response = await fetch(url, {\n//         method: 'PUT',\n//         headers: {\n//             Authorization: localStorage.getItem('token') ? `jwt ${localStorage.getItem('token')}` : '',\n//             'Content-Type': 'application/json;charset=utf-8'\n//         },\n//         body: JSON.stringify(data)\n//         }).catch(() =>\n//         alert(`Ошибка`)\n//     )\n//     return response.status\n// }\n\n\nexport default (get_request, post_request);","map":{"version":3,"sources":["/home/alexandr/PycharmProjects/Стажировка/trading/trading/frontend/src/BackendConnection.js"],"names":["get_request","url","response","fetch","method","headers","Authorization","localStorage","getItem","catch","alert","status","json","post_request","data","body","JSON","stringify"],"mappings":"AAAA,eAAeA,WAAf,CAA2BC,GAA3B,EAA+B;AAC3B,MAAIC,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAD,EAAM;AAC5BG,IAAAA,MAAM,EAAE,KADoB;AAE5BC,IAAAA,OAAO,EAAE;AACLC,MAAAA,aAAa,EAAEC,YAAY,CAACC,OAAb,CAAqB,OAArB,IAAgC,OAAMD,YAAY,CAACC,OAAb,CAAqB,OAArB,CAA8B,EAApE,GAAwE,EADlF;AAEL,sBAAgB;AAFX;AAFmB,GAAN,CAAL,CAMdC,KANc,CAMR,MACTC,KAAK,CAAE,cAAaR,QAAQ,CAACS,MAAO,EAA/B,CAPY,CAArB;AASAD,EAAAA,KAAK,CAACR,QAAQ,CAACS,MAAV,CAAL;AACA,SAAO,MAAMT,QAAQ,CAACU,IAAT,EAAb;AACH;;AAED,eAAeC,YAAf,CAA4BZ,GAA5B,EAAiCa,IAAI,GAAC,EAAtC,EAA0C;AACtC,MAAIZ,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAD,EAAM;AAC5BG,IAAAA,MAAM,EAAE,MADoB;AAE5BC,IAAAA,OAAO,EAAE;AACLC,MAAAA,aAAa,EAAEC,YAAY,CAACC,OAAb,CAAqB,OAArB,IAAgC,OAAMD,YAAY,CAACC,OAAb,CAAqB,OAArB,CAA8B,EAApE,GAAwE,EADlF;AAEL,sBAAgB;AAFX,KAFmB;AAM5BO,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeH,IAAf;AANsB,GAAN,CAAL,CAOdL,KAPc,CAOR,MACTC,KAAK,CAAE,cAAaR,QAAQ,CAACS,MAAO,EAA/B,CARY,CAArB;AAUA,SAAOT,QAAQ,CAACS,MAAhB;AACH,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,gBAAgBX,WAAW,EAAEa,YAA7B","sourcesContent":["async function get_request(url){\n    let response = await fetch(url, {\n        method: 'GET',\n        headers: {\n            Authorization: localStorage.getItem('token')? `jwt ${localStorage.getItem('token')}` : '',\n            'Content-Type': 'application/json;charset=utf-8'\n        },\n        }).catch(() =>\n        alert(`Код ошибки ${response.status}`)\n    )\n    alert(response.status)\n    return await response.json()\n}\n\nasync function post_request(url, data={}) {\n    let response = await fetch(url, {\n        method: 'POST',\n        headers: {\n            Authorization: localStorage.getItem('token')? `jwt ${localStorage.getItem('token')}` : '',\n            'Content-Type': 'application/json;charset=utf-8'\n        },\n        body: JSON.stringify(data)\n        }).catch(() =>\n        alert(`Код ошибки ${response.status}`)\n    )\n    return response.status\n}\n\n// async function put_request(url, data={}) {\n//     let response = await fetch(url, {\n//         method: 'PUT',\n//         headers: {\n//             Authorization: localStorage.getItem('token') ? `jwt ${localStorage.getItem('token')}` : '',\n//             'Content-Type': 'application/json;charset=utf-8'\n//         },\n//         body: JSON.stringify(data)\n//         }).catch(() =>\n//         alert(`Ошибка`)\n//     )\n//     return response.status\n// }\n\nexport default (get_request, post_request)"]},"metadata":{},"sourceType":"module"}