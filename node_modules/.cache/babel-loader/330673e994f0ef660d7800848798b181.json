{"ast":null,"code":"var _jsxFileName = \"/home/alexandr/PycharmProjects/\\u0421\\u0442\\u0430\\u0436\\u0438\\u0440\\u043E\\u0432\\u043A\\u0430/frontend/src/Offer.js\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport Item from \"./item\";\nimport { Redirect } from \"react-router-dom\";\nlet TRANSACTION_TYPE = {\n  1: \"purchase\",\n  2: \"sale\"\n};\n\nclass OffersView extends React.Component {\n  render() {\n    const content = this.props.offers.map(item => /*#__PURE__*/React.createElement(\"div\", {\n      key: item.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Item, {\n      item: item.item,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 17\n      }\n    }, \"Transaction type: \", TRANSACTION_TYPE[item.transaction_type]), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }\n    }, \"User: \", item.user.username), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }\n    }, \"Entry quantity: \", item.entry_quantity), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }\n    }, \"Quantity: \", item.quantity), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }\n    }, \"Price: \", item.price)));\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }\n    }, content);\n  }\n\n}\n\nclass CreateOfferForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      item: 1,\n      entry_quantity: 1,\n      order_type: 1,\n      transaction_type: 1,\n      price: 0,\n      max_quantity: null\n    };\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.makeItemOptions = this.makeItemOptions.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleInputChange(event) {\n    const target = event.target;\n    const value = event.target.value;\n    const name = target.name;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  handleSubmit(event) {\n    axios.post('http://localhost:8000/api/v1/offers/', {\n      item: this.state.item,\n      entry_quantity: this.state.entry_quantity,\n      order_type: this.state.order_type,\n      transaction_type: this.state.transaction_type,\n      price: this.state.price\n    }, {\n      headers: {\n        Authorization: localStorage.getItem('trading_api_token')\n      }\n    }).then(response => console.log(response)).then(event.preventDefault());\n  }\n\n  setMaxQuantity() {\n    if (this.state.transaction_type == 2) {\n      const item = this.props.inventory.find(item => item.item.id === this.state.item);\n      return item.quantity - item.reserved_quantity;\n    } else {\n      return null;\n    }\n  }\n\n  makeItemOptions() {\n    if (this.state.transaction_type == 1) {\n      return this.props.items.map(item => /*#__PURE__*/React.createElement(\"option\", {\n        name: item.name,\n        value: item.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 17\n        }\n      }, item.name));\n    } else {\n      return this.props.inventory.map(item => /*#__PURE__*/React.createElement(\"option\", {\n        name: item.name,\n        value: item.item.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }\n      }, item.item.name));\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }\n    }, \"Item:\", /*#__PURE__*/React.createElement(\"select\", {\n      key: 1,\n      name: \"item\",\n      value: this.state.item,\n      onChange: this.handleInputChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 21\n      }\n    }, this.makeItemOptions()), \"Quantity:\", /*#__PURE__*/React.createElement(\"input\", {\n      key: 2,\n      max: this.setMaxQuantity(),\n      name: \"entry_quantity\",\n      type: \"number\",\n      value: this.state.entry_quantity,\n      onChange: this.handleInputChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 21\n      }\n    }), \"Order type:\", /*#__PURE__*/React.createElement(\"select\", {\n      key: 3,\n      name: \"order_type\",\n      value: this.state.order_type,\n      onChange: this.handleInputChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 25\n      }\n    }, \"Market\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 25\n      }\n    }, \"Something else\")), \"Transaction type:\", /*#__PURE__*/React.createElement(\"select\", {\n      key: 4,\n      name: \"transaction_type\",\n      value: this.state.transaction_type,\n      onChange: this.handleInputChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 25\n      }\n    }, \"Purchase\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 25\n      }\n    }, \"Sell\")), \"Price:\", /*#__PURE__*/React.createElement(\"input\", {\n      key: 5,\n      name: \"price\",\n      type: \"number\",\n      value: this.state.price,\n      onChange: this.handleInputChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 21\n      }\n    }));\n  }\n\n}\n\nclass Offer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      offers: [],\n      items: [],\n      inventory: [],\n      authorized: !!localStorage.getItem(\"trading_api_token\")\n    };\n\n    if (this.state.authorized) {\n      axios.get('http://localhost:8000/api/v1/offers/', {\n        headers: {\n          Authorization: localStorage.getItem('trading_api_token')\n        }\n      }).then(response => this.setState({\n        offers: response.data\n      })).catch(err => {\n        if (err.response) {\n          if (err.response.status === 401) {\n            this.setState({\n              authorized: false\n            });\n          } else console.log(err.response);\n        } else console.log(err);\n      });\n      axios.get('http://localhost:8000/api/v1/items/', {\n        headers: {\n          Authorization: localStorage.getItem('trading_api_token')\n        }\n      }).then(response => this.setState({\n        items: response.data\n      })).catch(err => console.log(err));\n      axios.get('http://localhost:8000/api/v1/inventory/', {\n        headers: {\n          Authorization: localStorage.getItem('trading_api_token')\n        }\n      }).then(response => this.setState({\n        inventory: response.data\n      })).catch(err => console.log(err));\n    }\n  }\n\n  render() {\n    if (!this.state.authorized) return /*#__PURE__*/React.createElement(Redirect, {\n      to: {\n        pathname: \"/login\",\n        state: {\n          referrer: this.props.location.pathname\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 44\n      }\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(OffersView, {\n      offers: this.state.offers,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(CreateOfferForm, {\n      items: this.state.items,\n      inventory: this.state.inventory,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default Offer;","map":{"version":3,"sources":["/home/alexandr/PycharmProjects/Стажировка/frontend/src/Offer.js"],"names":["React","axios","Item","Redirect","TRANSACTION_TYPE","OffersView","Component","render","content","props","offers","map","item","id","transaction_type","user","username","entry_quantity","quantity","price","CreateOfferForm","constructor","state","order_type","max_quantity","handleInputChange","bind","makeItemOptions","handleSubmit","event","target","value","name","setState","post","headers","Authorization","localStorage","getItem","then","response","console","log","preventDefault","setMaxQuantity","inventory","find","reserved_quantity","items","Offer","authorized","get","data","catch","err","status","pathname","referrer","location"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAAQC,QAAR,QAAuB,kBAAvB;AAEA,IAAIC,gBAAgB,GAAG;AAAC,KAAG,UAAJ;AAAgB,KAAG;AAAnB,CAAvB;;AAEA,MAAMC,UAAN,SAAyBL,KAAK,CAACM,SAA/B,CAAwC;AACpCC,EAAAA,MAAM,GAAG;AACL,UAAMC,OAAO,GAAG,KAAKC,KAAL,CAAWC,MAAX,CAAkBC,GAAlB,CAAsBC,IAAI,iBACtC;AAAK,MAAA,GAAG,EAAEA,IAAI,CAACC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAED,IAAI,CAACA,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAsBR,gBAAgB,CAACQ,IAAI,CAACE,gBAAN,CAAtC,CAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAUF,IAAI,CAACG,IAAL,CAAUC,QAApB,CAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAoBJ,IAAI,CAACK,cAAzB,CAJJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAcL,IAAI,CAACM,QAAnB,CALJ,eAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAWN,IAAI,CAACO,KAAhB,CANJ,CADY,CAAhB;AAUA,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKX,OADL,CADJ;AAKH;;AAjBmC;;AAoBxC,MAAMY,eAAN,SAA8BpB,KAAK,CAACM,SAApC,CAA6C;AACzCe,EAAAA,WAAW,CAACZ,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKa,KAAL,GAAY;AACRV,MAAAA,IAAI,EAAE,CADE;AAERK,MAAAA,cAAc,EAAE,CAFR;AAGRM,MAAAA,UAAU,EAAE,CAHJ;AAIRT,MAAAA,gBAAgB,EAAE,CAJV;AAKRK,MAAAA,KAAK,EAAE,CALC;AAMRK,MAAAA,YAAY,EAAE;AANN,KAAZ;AAQA,SAAKC,iBAAL,GAAyB,KAAKA,iBAAL,CAAuBC,IAAvB,CAA4B,IAA5B,CAAzB;AACA,SAAKC,eAAL,GAAuB,KAAKA,eAAL,CAAqBD,IAArB,CAA0B,IAA1B,CAAvB;AACA,SAAKE,YAAL,GAAoB,KAAKA,YAAL,CAAkBF,IAAlB,CAAuB,IAAvB,CAApB;AACH;;AAEDD,EAAAA,iBAAiB,CAACI,KAAD,EAAQ;AACrB,UAAMC,MAAM,GAAGD,KAAK,CAACC,MAArB;AACA,UAAMC,KAAK,GAAGF,KAAK,CAACC,MAAN,CAAaC,KAA3B;AACA,UAAMC,IAAI,GAAGF,MAAM,CAACE,IAApB;AACA,SAAKC,QAAL,CAAc;AACV,OAACD,IAAD,GAAQD;AADE,KAAd;AAGH;;AAEDH,EAAAA,YAAY,CAACC,KAAD,EAAQ;AAChB5B,IAAAA,KAAK,CAACiC,IAAN,CAAW,sCAAX,EACI;AACItB,MAAAA,IAAI,EAAE,KAAKU,KAAL,CAAWV,IADrB;AAEIK,MAAAA,cAAc,EAAE,KAAKK,KAAL,CAAWL,cAF/B;AAGIM,MAAAA,UAAU,EAAE,KAAKD,KAAL,CAAWC,UAH3B;AAIIT,MAAAA,gBAAgB,EAAE,KAAKQ,KAAL,CAAWR,gBAJjC;AAKIK,MAAAA,KAAK,EAAE,KAAKG,KAAL,CAAWH;AALtB,KADJ,EAQI;AACIgB,MAAAA,OAAO,EAAE;AACLC,QAAAA,aAAa,EAAEC,YAAY,CAACC,OAAb,CAAqB,mBAArB;AADV;AADb,KARJ,EAcCC,IAdD,CAcMC,QAAQ,IAAIC,OAAO,CAACC,GAAR,CAAYF,QAAZ,CAdlB,EAeCD,IAfD,CAeMV,KAAK,CAACc,cAAN,EAfN;AAgBH;;AAEDC,EAAAA,cAAc,GAAE;AACZ,QAAI,KAAKtB,KAAL,CAAWR,gBAAX,IAA+B,CAAnC,EAAqC;AACjC,YAAMF,IAAI,GAAG,KAAKH,KAAL,CAAWoC,SAAX,CAAqBC,IAArB,CAA0BlC,IAAI,IAAIA,IAAI,CAACA,IAAL,CAAUC,EAAV,KAAiB,KAAKS,KAAL,CAAWV,IAA9D,CAAb;AACA,aAAQA,IAAI,CAACM,QAAL,GAAgBN,IAAI,CAACmC,iBAA7B;AACH,KAHD,MAII;AACA,aAAO,IAAP;AACH;AACJ;;AAEDpB,EAAAA,eAAe,GAAG;AACd,QAAI,KAAKL,KAAL,CAAWR,gBAAX,IAA+B,CAAnC,EAAsC;AAClC,aAAO,KAAKL,KAAL,CAAWuC,KAAX,CAAiBrC,GAAjB,CAAqBC,IAAI,iBAC5B;AAAQ,QAAA,IAAI,EAAEA,IAAI,CAACoB,IAAnB;AAAyB,QAAA,KAAK,EAAEpB,IAAI,CAACC,EAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA0CD,IAAI,CAACoB,IAA/C,CADG,CAAP;AAGH,KAJD,MAKK;AACD,aAAO,KAAKvB,KAAL,CAAWoC,SAAX,CAAqBlC,GAArB,CAAyBC,IAAI,iBAC5B;AAAQ,QAAA,IAAI,EAAEA,IAAI,CAACoB,IAAnB;AAAyB,QAAA,KAAK,EAAEpB,IAAI,CAACA,IAAL,CAAUC,EAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA+CD,IAAI,CAACA,IAAL,CAAUoB,IAAzD,CADD,CAAP;AAGH;AACJ;;AAEDzB,EAAAA,MAAM,GAAG;AACL,wBACI;AAAM,MAAA,QAAQ,EAAE,KAAKqB,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAEQ;AACI,MAAA,GAAG,EAAE,CADT;AAEI,MAAA,IAAI,EAAC,MAFT;AAGI,MAAA,KAAK,EAAE,KAAKN,KAAL,CAAWV,IAHtB;AAII,MAAA,QAAQ,EAAE,KAAKa,iBAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMK,KAAKE,eAAL,EANL,CAFR,4BAWQ;AACI,MAAA,GAAG,EAAE,CADT;AAEI,MAAA,GAAG,EAAE,KAAKiB,cAAL,EAFT;AAGI,MAAA,IAAI,EAAE,gBAHV;AAII,MAAA,IAAI,EAAC,QAJT;AAKI,MAAA,KAAK,EAAE,KAAKtB,KAAL,CAAWL,cALtB;AAMI,MAAA,QAAQ,EAAE,KAAKQ,iBANnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXR,8BAoBQ;AACI,MAAA,GAAG,EAAE,CADT;AAEI,MAAA,IAAI,EAAE,YAFV;AAGI,MAAA,KAAK,EAAE,KAAKH,KAAL,CAAWC,UAHtB;AAII,MAAA,QAAQ,EAAE,KAAKE,iBAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAMI;AAAQ,MAAA,KAAK,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANJ,eAOI;AAAQ,MAAA,KAAK,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAPJ,CApBR,oCA8BQ;AACI,MAAA,GAAG,EAAE,CADT;AAEI,MAAA,IAAI,EAAE,kBAFV;AAGI,MAAA,KAAK,EAAE,KAAKH,KAAL,CAAWR,gBAHtB;AAII,MAAA,QAAQ,EAAE,KAAKW,iBAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAMI;AAAQ,MAAA,KAAK,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBANJ,eAOI;AAAQ,MAAA,KAAK,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPJ,CA9BR,yBAwCQ;AACI,MAAA,GAAG,EAAE,CADT;AAEI,MAAA,IAAI,EAAE,OAFV;AAGI,MAAA,IAAI,EAAC,QAHT;AAII,MAAA,KAAK,EAAE,KAAKH,KAAL,CAAWH,KAJtB;AAKI,MAAA,QAAQ,EAAE,KAAKM,iBALnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAxCR,eA+CQ;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA/CR,CADJ;AAmDH;;AAvHwC;;AA0H7C,MAAMwB,KAAN,SAAoBjD,KAAK,CAACM,SAA1B,CAAmC;AAC/Be,EAAAA,WAAW,CAACZ,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKa,KAAL,GAAa;AACTZ,MAAAA,MAAM,EAAE,EADC;AAETsC,MAAAA,KAAK,EAAE,EAFE;AAGTH,MAAAA,SAAS,EAAE,EAHF;AAITK,MAAAA,UAAU,EAAE,CAAC,CAAEb,YAAY,CAACC,OAAb,CAAqB,mBAArB;AAJN,KAAb;;AAMA,QAAI,KAAKhB,KAAL,CAAW4B,UAAf,EAA2B;AACvBjD,MAAAA,KAAK,CACAkD,GADL,CACS,sCADT,EACiD;AACzChB,QAAAA,OAAO,EAAE;AACLC,UAAAA,aAAa,EAAEC,YAAY,CAACC,OAAb,CAAqB,mBAArB;AADV;AADgC,OADjD,EAMKC,IANL,CAMUC,QAAQ,IAAI,KAAKP,QAAL,CAAc;AAACvB,QAAAA,MAAM,EAAE8B,QAAQ,CAACY;AAAlB,OAAd,CANtB,EAOKC,KAPL,CAOWC,GAAG,IAAI;AACV,YAAIA,GAAG,CAACd,QAAR,EAAkB;AACd,cAAIc,GAAG,CAACd,QAAJ,CAAae,MAAb,KAAwB,GAA5B,EAAiC;AAC7B,iBAAKtB,QAAL,CAAc;AAACiB,cAAAA,UAAU,EAAE;AAAb,aAAd;AACH,WAFD,MAEOT,OAAO,CAACC,GAAR,CAAYY,GAAG,CAACd,QAAhB;AAEV,SALD,MAKOC,OAAO,CAACC,GAAR,CAAYY,GAAZ;AACV,OAdL;AAeArD,MAAAA,KAAK,CACAkD,GADL,CACS,qCADT,EACgD;AACxChB,QAAAA,OAAO,EAAE;AACLC,UAAAA,aAAa,EAAEC,YAAY,CAACC,OAAb,CAAqB,mBAArB;AADV;AAD+B,OADhD,EAMKC,IANL,CAMUC,QAAQ,IAAI,KAAKP,QAAL,CAAc;AAACe,QAAAA,KAAK,EAAER,QAAQ,CAACY;AAAjB,OAAd,CANtB,EAOKC,KAPL,CAOWC,GAAG,IAAIb,OAAO,CAACC,GAAR,CAAYY,GAAZ,CAPlB;AAQArD,MAAAA,KAAK,CACAkD,GADL,CACS,yCADT,EACoD;AAC5ChB,QAAAA,OAAO,EAAE;AACLC,UAAAA,aAAa,EAAEC,YAAY,CAACC,OAAb,CAAqB,mBAArB;AADV;AADmC,OADpD,EAMKC,IANL,CAMUC,QAAQ,IAAI,KAAKP,QAAL,CAAc;AAACY,QAAAA,SAAS,EAAEL,QAAQ,CAACY;AAArB,OAAd,CANtB,EAOKC,KAPL,CAOWC,GAAG,IAAIb,OAAO,CAACC,GAAR,CAAYY,GAAZ,CAPlB;AAQH;AACJ;;AACD/C,EAAAA,MAAM,GAAG;AACL,QAAI,CAAC,KAAKe,KAAL,CAAW4B,UAAhB,EAA4B,oBAAO,oBAAC,QAAD;AAC/B,MAAA,EAAE,EAAE;AACAM,QAAAA,QAAQ,EAAE,QADV;AAEAlC,QAAAA,KAAK,EAAE;AAACmC,UAAAA,QAAQ,EAAE,KAAKhD,KAAL,CAAWiD,QAAX,CAAoBF;AAA/B;AAFP,OAD2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AAK5B,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,UAAD;AAAY,MAAA,MAAM,EAAE,KAAKlC,KAAL,CAAWZ,MAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI,oBAAC,eAAD;AAAiB,MAAA,KAAK,EAAE,KAAKY,KAAL,CAAW0B,KAAnC;AAA0C,MAAA,SAAS,EAAE,KAAK1B,KAAL,CAAWuB,SAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ;AAMH;;AAvD8B;;AA0DnC,eAAeI,KAAf","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport Item from \"./item\"\nimport {Redirect} from \"react-router-dom\";\n\nlet TRANSACTION_TYPE = {1: \"purchase\", 2: \"sale\"}\n\nclass OffersView extends React.Component{\n    render() {\n        const content = this.props.offers.map(item =>\n            <div key={item.id}>\n                <Item item={item.item} />\n                <p>Transaction type: {TRANSACTION_TYPE[item.transaction_type]}</p>\n                <p>User: {item.user.username}</p>\n                <p>Entry quantity: {item.entry_quantity}</p>\n                <p>Quantity: {item.quantity}</p>\n                <p>Price: {item.price}</p>\n            </div>\n        )\n        return (\n            <div>\n                {content}\n            </div>\n        )\n    }\n}\n\nclass CreateOfferForm extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state ={\n            item: 1,\n            entry_quantity: 1,\n            order_type: 1,\n            transaction_type: 1,\n            price: 0,\n            max_quantity: null\n        }\n        this.handleInputChange = this.handleInputChange.bind(this)\n        this.makeItemOptions = this.makeItemOptions.bind(this)\n        this.handleSubmit = this.handleSubmit.bind(this)\n    }\n\n    handleInputChange(event) {\n        const target = event.target;\n        const value = event.target.value;\n        const name = target.name;\n        this.setState({\n            [name]: value\n        });\n    }\n\n    handleSubmit(event) {\n        axios.post('http://localhost:8000/api/v1/offers/',\n            {\n                item: this.state.item,\n                entry_quantity: this.state.entry_quantity,\n                order_type: this.state.order_type,\n                transaction_type: this.state.transaction_type,\n                price: this.state.price,\n            },\n            {\n                headers: {\n                    Authorization: localStorage.getItem('trading_api_token')\n                }\n            }\n        )\n        .then(response => console.log(response))\n        .then(event.preventDefault())\n    }\n\n    setMaxQuantity(){\n        if (this.state.transaction_type == 2){\n            const item = this.props.inventory.find(item => item.item.id === this.state.item)\n            return (item.quantity - item.reserved_quantity)\n        }\n        else{\n            return null\n        }\n    }\n\n    makeItemOptions() {\n        if (this.state.transaction_type == 1) {\n            return this.props.items.map(item =>\n                <option name={item.name} value={item.id}>{item.name}</option>\n            )\n        }\n        else {\n            return this.props.inventory.map(item =>\n                    <option name={item.name} value={item.item.id}>{item.item.name}</option>\n            )\n        }\n    }\n\n    render() {\n        return (\n            <form onSubmit={this.handleSubmit}>\n                    Item:\n                    <select\n                        key={1}\n                        name=\"item\"\n                        value={this.state.item}\n                        onChange={this.handleInputChange}\n                    >\n                        {this.makeItemOptions()}\n                    </select>\n                    Quantity:\n                    <input\n                        key={2}\n                        max={this.setMaxQuantity()}\n                        name={\"entry_quantity\"}\n                        type=\"number\"\n                        value={this.state.entry_quantity}\n                        onChange={this.handleInputChange}\n                    />\n                    Order type:\n                    <select\n                        key={3}\n                        name={\"order_type\"}\n                        value={this.state.order_type}\n                        onChange={this.handleInputChange}\n                    >\n                        <option value={1}>Market</option>\n                        <option value={2}>Something else</option>\n                    </select>\n                    Transaction type:\n                    <select\n                        key={4}\n                        name={\"transaction_type\"}\n                        value={this.state.transaction_type}\n                        onChange={this.handleInputChange}\n                    >\n                        <option value={1}>Purchase</option>\n                        <option value={2}>Sell</option>\n                    </select>\n                    Price:\n                    <input\n                        key={5}\n                        name={\"price\"}\n                        type=\"number\"\n                        value={this.state.price}\n                        onChange={this.handleInputChange}\n                    />\n                    <input type=\"submit\"/>\n            </form>\n        )\n    }\n}\n\nclass Offer extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            offers: [],\n            items: [],\n            inventory: [],\n            authorized: !!(localStorage.getItem(\"trading_api_token\"))\n        }\n        if (this.state.authorized) {\n            axios\n                .get('http://localhost:8000/api/v1/offers/', {\n                    headers: {\n                        Authorization: localStorage.getItem('trading_api_token')\n                    }\n                })\n                .then(response => this.setState({offers: response.data}))\n                .catch(err => {\n                    if (err.response) {\n                        if (err.response.status === 401) {\n                            this.setState({authorized: false})\n                        } else console.log(err.response)\n\n                    } else console.log(err)\n                })\n            axios\n                .get('http://localhost:8000/api/v1/items/', {\n                    headers: {\n                        Authorization: localStorage.getItem('trading_api_token')\n                    }\n                })\n                .then(response => this.setState({items: response.data}))\n                .catch(err => console.log(err))\n            axios\n                .get('http://localhost:8000/api/v1/inventory/', {\n                    headers: {\n                        Authorization: localStorage.getItem('trading_api_token')\n                    }\n                })\n                .then(response => this.setState({inventory: response.data}))\n                .catch(err => console.log(err))\n        }\n    }\n    render() {\n        if (!this.state.authorized) return <Redirect\n            to={{\n                pathname: \"/login\",\n                state: {referrer: this.props.location.pathname}\n            }} />\n        return (\n            <div>\n                <OffersView offers={this.state.offers}/>\n                <CreateOfferForm items={this.state.items} inventory={this.state.inventory}/>\n            </div>\n        )\n    }\n}\n\nexport default Offer"]},"metadata":{},"sourceType":"module"}