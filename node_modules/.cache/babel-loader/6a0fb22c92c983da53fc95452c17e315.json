{"ast":null,"code":"var _jsxFileName = \"/home/alexandr/PycharmProjects/\\u0421\\u0442\\u0430\\u0436\\u0438\\u0440\\u043E\\u0432\\u043A\\u0430/frontend/src/Offer.js\";\nimport React from \"react\";\nimport axios from \"axios\";\nlet TRANSACTION_TYPE = {\n  1: \"purchase\",\n  2: \"sale\"\n};\n\nclass OffersView extends React.Component {\n  render() {\n    const content = this.props.offers.map(item => /*#__PURE__*/React.createElement(\"div\", {\n      key: item.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 17\n      }\n    }, item.item.code), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 17\n      }\n    }, item.item.name), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 17\n      }\n    }, item.item.logo), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 17\n      }\n    }, item.item.details), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }\n    }, \"Transaction type: \", TRANSACTION_TYPE[item.transaction_type]), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }\n    }, \"User: \", item.user.username), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }\n    }, \"Currency: \", item.item.currency.name), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }\n    }, \"Entry quantity: \", item.entry_quantity), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }\n    }, \"Quantity: \", item.quantity), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }\n    }, \"Reserved quantity: \", item.reserved_quantity), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }\n    }, \"Price: \", item.price)));\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }\n    }, content);\n  }\n\n}\n\nclass CreateOfferForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      item: '',\n      entry_quantity: 1,\n      order_type: 1,\n      transaction_type: 1,\n      price: 0,\n      max_quantity: null\n    };\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.makeItemOptions = this.makeItemOptions.bind(this);\n  }\n\n  handleInputChange(event) {\n    const target = event.target;\n    const value = event.target.value;\n    const name = target.name;\n    this.setState({\n      [name]: value\n    });\n    if (name === \"item\") this.setMaxQuantity();\n  }\n\n  handleSubmit(event) {\n    axios.post('http://localhost:8000/api/v1/offers/', this.state, {\n      headers: {\n        Authorization: localStorage.getItem('trading_api_token')\n      }\n    }).then(response => console.log(response)).then(event.preventDefault());\n  }\n\n  setMaxQuantity() {\n    if (this.state.transaction_type == 2) {\n      const item = this.props.inventory.find(item => item.item.id === this.item);\n      this.setState({\n        max_quantity: item.quantity - item.reserved_quantity\n      });\n    } else {\n      this.setState({\n        max_quantity: null\n      });\n    }\n  }\n\n  makeItemOptions() {\n    if (this.state.transaction_type == 1) {\n      return this.props.items.map(item => /*#__PURE__*/React.createElement(\"option\", {\n        name: item.name,\n        value: item.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 17\n        }\n      }, item.name));\n    } else {\n      return this.props.inventory.map(item => /*#__PURE__*/React.createElement(\"option\", {\n        name: item.name,\n        value: item.item.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }\n      }, item.item.name));\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }\n    }, \"Item:\", /*#__PURE__*/React.createElement(\"select\", {\n      key: 1,\n      name: \"item\",\n      value: this.state.item,\n      onChange: this.handleInputChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 21\n      }\n    }, this.makeItemOptions()), \"Quantity:\", /*#__PURE__*/React.createElement(\"input\", {\n      key: 2,\n      max: this.state.max_quantity,\n      name: \"entry_quantity\",\n      type: \"number\",\n      value: this.state.entry_quantity,\n      onChange: this.handleInputChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 21\n      }\n    }), \"Order type:\", /*#__PURE__*/React.createElement(\"select\", {\n      key: 3,\n      name: \"order_type\",\n      value: this.state.order_type,\n      onChange: this.handleInputChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 25\n      }\n    }, \"Market\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 25\n      }\n    }, \"Something else\")), \"Transaction type:\", /*#__PURE__*/React.createElement(\"select\", {\n      key: 4,\n      name: \"transaction_type\",\n      value: this.state.transaction_type,\n      onChange: this.handleInputChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 25\n      }\n    }, \"Purchase\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 25\n      }\n    }, \"Sell\")), \"Price:\", /*#__PURE__*/React.createElement(\"input\", {\n      key: 5,\n      name: \"price\",\n      type: \"number\",\n      value: this.state.price,\n      onChange: this.handleInputChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 21\n      }\n    }));\n  }\n\n}\n\nclass Offer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      offers: [],\n      items: [],\n      inventory: []\n    };\n    axios.get('http://localhost:8000/api/v1/offers/', {\n      headers: {\n        Authorization: localStorage.getItem('trading_api_token')\n      }\n    }).then(response => this.setState({\n      offers: response.data\n    })).catch(err => console.log(err));\n    axios.get('http://localhost:8000/api/v1/items/', {\n      headers: {\n        Authorization: localStorage.getItem('trading_api_token')\n      }\n    }).then(response => this.setState({\n      items: response.data\n    })).catch(err => console.log(err));\n    axios.get('http://localhost:8000/api/v1/inventory/', {\n      headers: {\n        Authorization: localStorage.getItem('trading_api_token')\n      }\n    }).then(response => this.setState({\n      inventory: response.data\n    })).catch(err => console.log(err));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(OffersView, {\n      offers: this.state.offers,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(CreateOfferForm, {\n      items: this.state.items,\n      inventory: this.state.inventory,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default Offer;","map":{"version":3,"sources":["/home/alexandr/PycharmProjects/Стажировка/frontend/src/Offer.js"],"names":["React","axios","TRANSACTION_TYPE","OffersView","Component","render","content","props","offers","map","item","id","code","name","logo","details","transaction_type","user","username","currency","entry_quantity","quantity","reserved_quantity","price","CreateOfferForm","constructor","state","order_type","max_quantity","handleInputChange","bind","makeItemOptions","event","target","value","setState","setMaxQuantity","handleSubmit","post","headers","Authorization","localStorage","getItem","then","response","console","log","preventDefault","inventory","find","items","Offer","get","data","catch","err"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport axios from \"axios\"\n\nlet TRANSACTION_TYPE = {1: \"purchase\", 2: \"sale\"}\n\nclass OffersView extends React.Component{\n    render() {\n        const content = this.props.offers.map(item =>\n            <div key={item.id}>\n                <p>{item.item.code}</p>\n                <p>{item.item.name}</p>\n                <p>{item.item.logo}</p>\n                <p>{item.item.details}</p>\n                <p>Transaction type: {TRANSACTION_TYPE[item.transaction_type]}</p>\n                <p>User: {item.user.username}</p>\n                <p>Currency: {item.item.currency.name}</p>\n                <p>Entry quantity: {item.entry_quantity}</p>\n                <p>Quantity: {item.quantity}</p>\n                <p>Reserved quantity: {item.reserved_quantity}</p>\n                <p>Price: {item.price}</p>\n            </div>\n        )\n        return (\n            <div>\n                {content}\n            </div>\n        )\n    }\n}\n\nclass CreateOfferForm extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state ={\n            item: '',\n            entry_quantity: 1,\n            order_type: 1,\n            transaction_type: 1,\n            price: 0,\n            max_quantity: null\n        }\n        this.handleInputChange = this.handleInputChange.bind(this)\n        this.makeItemOptions = this.makeItemOptions.bind(this)\n    }\n\n    handleInputChange(event) {\n        const target = event.target;\n        const value = event.target.value;\n        const name = target.name;\n        this.setState({\n            [name]: value\n        });\n        if (name === \"item\" ) this.setMaxQuantity();\n    }\n\n    handleSubmit(event) {\n        axios.post('http://localhost:8000/api/v1/offers/',\n            this.state,\n            {\n                headers: {\n                    Authorization: localStorage.getItem('trading_api_token')\n                }\n            }\n        )\n        .then(response => console.log(response))\n        .then(event.preventDefault())\n    }\n\n    setMaxQuantity(){\n        if (this.state.transaction_type == 2){\n            const item = this.props.inventory.find(item =>\n                item.item.id === this.item\n            )\n            this.setState({max_quantity: (item.quantity - item.reserved_quantity)})\n        }\n        else{\n            this.setState({max_quantity: null})\n        }\n    }\n\n    makeItemOptions() {\n        if (this.state.transaction_type == 1) {\n            return this.props.items.map(item =>\n                <option name={item.name} value={item.id}>{item.name}</option>\n            )\n        }\n        else {\n            return this.props.inventory.map(item =>\n                    <option name={item.name} value={item.item.id}>{item.item.name}</option>\n                )\n        }\n    }\n\n    render() {\n        return (\n            <form onSubmit={this.handleSubmit}>\n                    Item:\n                    <select\n                        key={1}\n                        name=\"item\"\n                        value={this.state.item}\n                        onChange={this.handleInputChange}\n                    >\n                        {this.makeItemOptions()}\n                    </select>\n                    Quantity:\n                    <input\n                        key={2}\n                        max={this.state.max_quantity}\n                        name={\"entry_quantity\"}\n                        type=\"number\"\n                        value={this.state.entry_quantity}\n                        onChange={this.handleInputChange}\n                    />\n                    Order type:\n                    <select\n                        key={3}\n                        name={\"order_type\"}\n                        value={this.state.order_type}\n                        onChange={this.handleInputChange}\n                    >\n                        <option value={1}>Market</option>\n                        <option value={2}>Something else</option>\n                    </select>\n                    Transaction type:\n                    <select\n                        key={4}\n                        name={\"transaction_type\"}\n                        value={this.state.transaction_type}\n                        onChange={this.handleInputChange}\n                    >\n                        <option value={1}>Purchase</option>\n                        <option value={2}>Sell</option>\n                    </select>\n                    Price:\n                    <input\n                        key={5}\n                        name={\"price\"}\n                        type=\"number\"\n                        value={this.state.price}\n                        onChange={this.handleInputChange}\n                    />\n            </form>\n        )\n    }\n}\n\nclass Offer extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            offers: [],\n            items: [],\n            inventory: []\n        }\n        axios\n            .get('http://localhost:8000/api/v1/offers/', {\n                headers: {\n                    Authorization: localStorage.getItem('trading_api_token')\n                }\n            })\n            .then(response => this.setState({offers: response.data}))\n            .catch(err => console.log(err))\n        axios\n            .get('http://localhost:8000/api/v1/items/', {\n                headers: {\n                    Authorization: localStorage.getItem('trading_api_token')\n                }\n            })\n            .then(response => this.setState({items: response.data}))\n            .catch(err => console.log(err))\n        axios\n            .get('http://localhost:8000/api/v1/inventory/', {\n                headers: {\n                    Authorization: localStorage.getItem('trading_api_token')\n                }\n            })\n            .then(response => this.setState({inventory: response.data}))\n            .catch(err => console.log(err))\n    }\n    render() {\n        return (\n            <div>\n                <OffersView offers={this.state.offers}/>\n                <CreateOfferForm items={this.state.items} inventory={this.state.inventory}/>\n            </div>\n        )\n    }\n}\n\nexport default Offer"]},"metadata":{},"sourceType":"module"}